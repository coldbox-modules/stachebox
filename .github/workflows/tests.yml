name: Test Suites

# We are a reusable Workflow only
on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-20.04
    env:
      ELASTICSEARCH_PROTOCOL: http
      ELASTICSEARCH_HOST: 127.0.0.1
      ELASTICSEARCH_PORT: 9200
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        cfengine: [ "lucee@5", "adobe@2018", "adobe@2021", "adobe@2023" ]
        ELASTICSEARCH_VERSION: [ "7.17.8", "8.14.1" ]
        experimental: [false]
        coldboxVersion: [ "^6.0.0", "^7.0.0" ]
        include:
          - cfengine: "lucee@be"
            ELASTICSEARCH_VERSION: "8.14.1"
            coldboxVersion: "^7.0.0"
            experimental: true
          - cfengine: "boxlang@1"
            ELASTICSEARCH_VERSION: "8.14.1"
            coldboxVersion: "be"
            experimental: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.2.0

      - name: Setup Java
        uses: actions/setup-java@v3.9.0
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup CommandBox CLI
        uses: Ortus-Solutions/setup-commandbox@v2.0.1

      - name: Install Dependencies
        run: |
          cd test-harness && box package set dependencies.coldbox=${{ matrix.coldboxVersion }} && cd ../
          box run-script harness:install

      - name:  Install Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Compile Release Static assets
        run: |
          npm install && npm run prod
          cd $GITHUB_WORKSPACE

      - name: Setup Elasticsearch
        run: |
          docker run -d -p "${{ env.ELASTICSEARCH_PORT }}:9200" -v $PWD/build/resources/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml elasticsearch:${{ matrix.ELASTICSEARCH_VERSION }}
          rm -rf test-harness/modules_app

      - name: Start ${{ matrix.cfengine }} Server
        env:
          ENVIRONMENT: development
        run: |
          box server start serverConfigFile="server-${{ matrix.cfengine }}.json" --noSaveSettings --debug
          curl http://127.0.0.1:60299

      - name: Run Tests
        env:
          ENVIRONMENT: development
        run: |
          mkdir -p test-harness/tests/results
          box testbox run --verbose outputFile=test-harness/tests/results/test-results outputFormats=json,antjunit
          ls -lR test-harness/tests

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: test-harness/tests/results/**/*.xml
          check_name: "${{ matrix.cfengine }} Test Results"

      - name: Upload Test Results to Artifacts
        if: always()
        uses: actions/upload-artifact@v3.1.1
        with:
          name: test-results-${{ matrix.cfengine }}
          path: |
            test-harness/tests/results/**/*

      - name: Failure Debugging Log
        if: ${{ failure() }}
        run: |
          box server log serverConfigFile="server-${{ matrix.cfengine }}.json"

      - name: Upload Debugging Log To Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3.1.1
        with:
          name: Failure Debugging Info - ${{ matrix.cfengine }}
          path: |
            test-harness/.engine/**/logs/*
            test-harness/.engine/**/WEB-INF/cfusion/logs/*

      - name: Slack Notifications
        # Only on failures and NOT in pull requests
        if: ${{ failure() && !startsWith( 'pull_request', github.event_name ) }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: coding
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: '${{ github.repository }} tests failed :cry:'
          SLACK_TITLE: ${{ github.repository }} Tests For ${{ matrix.cfengine }} failed
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
